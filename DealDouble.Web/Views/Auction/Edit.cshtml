@model DealDouble.Web.ViewModels.AuctionCrudeViewModel
<div class="modal-header">
    <h5 class="modal-title" id="exampleModalLongTitle">Auction Create</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

<form id="editAuction">
    <div class="modal-body">
        <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="row">
                <div class="col-lg-4">
                    <input type="hidden" name="AuctionID" value="@Model.AuctionID" />
                    <label class="font-weight-bold">Title</label>
                    <input type="text" name="Title" class="form-control" value="@Model.Title" />
                </div>
                <div class="col-lg-4">
                    <label class="font-weight-bold">Category</label>
                    <select name="CategoryID" class="form-control">
                        @foreach (var category in Model.Categories)
                        {
                            var selected = category.ID == Model.CategoryID ? "selected" : string.Empty;
                            <option value="@category.ID" @selected>@category.Name</option>
                        }
                    </select>
                </div>
                <div class="col-lg-4">
                    <label class="font-weight-bold">Description</label>
                    <input type="text" name="Description" class="form-control" value="@Model.Description" />
                </div>
                <div class="col-lg-4">
                    <label class="font-weight-bold">ActualAmount</label>
                    <input type="number" name="ActualAmount" class="form-control" value="@Model.ActualAmount" />
                </div>
                <div class="col-lg-4">
                    <label class="font-weight-bold">StartingTime</label>
                    <input type="datetime" name="StartingTime" class="form-control" value="@Model.StartingTime" />
                </div>
                <div class="col-lg-4">
                    <label class="font-weight-bold">EndingTime</label>
                    <input type="datetime" name="EndTime" class="form-control" value="@Model.EndTime" />
                </div>
                <div class="col-lg-6">
                    <label class="font-weight-bold">Pictures</label>
                    <input type="file" id="auctionPictures" class="form-control" name="AuctionPictures" multiple />
                </div>
                <div class="col-lg-6 mt-1" id="pictuerArea">
                    @if(Model.AuctionImage.Count>0 && Model.AuctionImage != null)
                    {
                        foreach (var picture in Model.AuctionImage)
                        {
                            <img class="image img-thumbnail" src="/Content/images/@picture.Picture.URL" style="height:150px; width:150px;" />
                        }
                    }
                    <input type="hidden" id="pictueIDs" name="AuctionPictures" />
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" id="btneditAuction" class="btn btn-primary">Update</button>
    </div>
</form>



<script>
    RemovingImage();
    $("#auctionPictures").change(function () {
        var element = this
        var formData = new FormData();
        var totalFiles = element.files.length;
        for (var i = 0; i < totalFiles; i++) {
            var files = element.files[i];
            formData.append("Photo", files);
        }
        $.ajax({
            method: "Post",
            url: "@Url.Action("UploadImage", "Shared")",
            dataType: 'json',
        data: formData,
        contentType: false,
        processData: false

    }).done(function (responses) {
        if (responses.Success) {
            for (var i = 0 ; i < responses.pictuerJSON.length; i++)
            {
                var picResponse = responses.pictuerJSON[i];
                AttachNewImage(picResponse.pictureURL, picResponse.ID)
            }
        }
        else {
            alert("Image URL Not set");
        }
    }).fail(function (xhr, ajaxOptions, thrownError) {
        alert(xhr.status);
        console.log(thrownError);
    });
    });
    $("#btneditAuction").click(function () {
        var imageIDs = [];
        $("#pictuerArea .image").each(function () {
            var imageID = $(this).attr("data-id");
            imageIDs.push(imageID);
        });
        $("#pictueIDs").val(imageIDs.join());
        $.ajax({
            method: 'post',
            url: '@Url.Action("Edit","Auction")',
            data: $("#editAuction").serialize()
        }).done(function (response) {
            $("#auctionCreateFrom").modal('toggle');
            $("#listingArea").html(response);
        }).fail(function (xhr, ajaxOptions, thrownError) {
            alert(xhr.status);
            console.log(thrownError);
        });

    })
</script>



